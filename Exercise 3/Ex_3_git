include("general_utils.jl")
include("standard_start.jl")

using Images

##Here’s an image. Use  imread() to load it into Julia and imshow() to display
## it in a figure. You’ll see that it’s a color image with 360 rows by 640
## columns of pixels. Since it is in color, each pixel doesn’t not only has a
## luminance values, but a red (R), green (G), and blue (B) value as well. Each
## pixel also has a fourth value (alpha) that we’re not going to use here.
## Therefore, this image is actually a set of four 360x640 matrices. Use size()
## to see that the image is 360x640x4, in other words, it is a set of memory
## slots arranged as a rectangular prism. The first 360x640 matrix
## (corresponding to indices [:,:,1]) is the R channel; then G; then B; and then
##alpha (which we will ignore). The figure below might be able to help you
## visualize this:

elcap = imread("el-capitan.png")

figure(1); clf();

imshow(elcap)

Write a function that takes as input a string representing the filename, and
## then loads the image file, displays it, and extracts the red, blue, and green
## channels into separate variables, and returns those variables. In other words,
## your function should take an image name as an argument and output three separate
## variables, that in the case of our example image would each be a 360x640 matrix.
## Commit and push your file to the repository you just set up.

function img_process(filename)
    """
    img_process -- reads in image, displays image, returns pixel information

    Args:
        filename (str): the name of the file you'd like to read in str quotes

    Returns:
        image (arr): array of image file loaded
        red   (arr): matrix corresponding to red channel pixels
        blue  (arr): matrix corresponding to blue channel pixels
        green (arr): matrix corresponding to green channel pixels
    """

    #read in image
    image = imread(filename)

    #plot image
    figure(2); clf();
    imshow(image)

    #extract variables
    red    = image[:,:,1]
    green  = image[:,:,2]
    blue   = image[:,:,3]

    return red, blue, green

end

reds, greens, blues = img_process("el-capitan.png")

size(reds), size(greens), size(blues)
